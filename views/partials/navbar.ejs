<link rel="stylesheet" href="/css/theme.css">

<header class="navbar flex justify-between items-center sticky top-0 z-10 bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4 shadow-xl transition-all dark:bg-gray-900">
    <div class="flex items-center w-full justify-between lg:w-auto">
        <!-- Mobile Menu Button -->
        <div class="block lg:hidden">
            <button aria-label="Toggle mobile menu" class="mobile-menu-button focus:outline-none">
                <svg class="w-8 h-8 text-white transition-transform duration-300 hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                </svg>
            </button>
        </div>
        <!-- Logo -->
        <h1 class="logo text-white text-3xl font-extrabold hover:text-yellow-300 cursor-pointer transition duration-300 transform hover:scale-110 mr-4">
            <a href="/" aria-label="Go to Blog Platform homepage">Blog Platform</a>
        </h1>

        <!-- Search Form (Hidden on Mobile) -->
        <form action="/search" method="GET" class="hidden lg:flex">
            <input class="search border-2 border-white rounded-full px-4 py-2 outline-none placeholder-white placeholder-opacity-70 bg-transparent transition duration-300 focus:ring-2 focus:ring-yellow-400" type="text" name="query" placeholder="Search by tags or category">
            <button class="search-btn text-white px-6 py-2 rounded-full bg-yellow-400 hover:bg-yellow-300 transition duration-300 transform hover:scale-105" type="submit">Search</button>
        </form>


        <!-- Theme Toggle Button -->
        <div class="theme-toggle cursor-pointer flex items-center space-x-2 ml-4 w-8 hover:scale-105 transition-transform duration-200">
            <svg id="sun" class="w-6 h-6 text-yellow-400 hidden transition-all duration-200" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" color="#000000" fill="none">
                <path d="M17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12C7 9.23858 9.23858 7 12 7C14.7614 7 17 9.23858 17 12Z" stroke="currentColor" stroke-width="1.5" />
                <path d="M12 2V3.5M12 20.5V22M19.0708 19.0713L18.0101 18.0106M5.98926 5.98926L4.9286 4.9286M22 12H20.5M3.5 12H2M19.0713 4.92871L18.0106 5.98937M5.98975 18.0107L4.92909 19.0714" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />
            </svg>
            <svg  id="moon" class="w-6 h-6 text-blue-300 transition-all duration-200" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" color="#000000" fill="none">
                <path d="M21.5 14.0784C20.3003 14.7189 18.9301 15.0821 17.4751 15.0821C12.7491 15.0821 8.91792 11.2509 8.91792 6.52485C8.91792 5.06986 9.28105 3.69968 9.92163 2.5C5.66765 3.49698 2.5 7.31513 2.5 11.8731C2.5 17.1899 6.8101 21.5 12.1269 21.5C16.6849 21.5 20.503 18.3324 21.5 14.0784Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
        </div>

        <!-- Notifications Button -->
        <div class="relative ml-4">
            <a href="/notifications" class="text-white hover:text-yellow-300 transition-all flex items-center">
                <svg class="w-8 h-8 mr-2 transition-transform duration-300 hover:scale-110" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" color="white" fill="none">
                    <path d="M5.15837 11.491C5.08489 12.887 5.16936 14.373 3.92213 15.3084C3.34164 15.7438 3 16.427 3 17.1527C3 18.1508 3.7818 19 4.8 19H19.2C20.2182 19 21 18.1508 21 17.1527C21 16.427 20.6584 15.7438 20.0779 15.3084C18.8306 14.373 18.9151 12.887 18.8416 11.491C18.6501 7.85223 15.6438 5 12 5C8.35617 5 5.34988 7.85222 5.15837 11.491Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M10.5 3.125C10.5 3.95343 11.1716 5 12 5C12.8284 5 13.5 3.95343 13.5 3.125C13.5 2.29657 12.8284 2 12 2C11.1716 2 10.5 2.29657 10.5 3.125Z" stroke="currentColor" stroke-width="1.5" />
                    <path d="M15 19C15 20.6569 13.6569 22 12 22C10.3431 22 9 20.6569 9 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <span class="notification-count hidden absolute top-0 right-0 bg-red-600 text-white text-xs font-semibold h-5 w-5 rounded-full items-center justify-center"></span>
            </a>
        </div>
    </div>

    <!-- Navbar Links -->
<nav class="hidden lg:flex space-x-10 items-center text-lg nav-links">
    <% if (user) { %>
        <a href="/dashboard" class="text-white dark:text-gray-200 hover:underline hover:text-yellow-400 transition-all 
        <%= currentRoute === '/dashboard' ? 'underline' : '' %>">Dashboard</a>
        <a href="/profile/edit" class="text-white dark:text-gray-200 hover:underline hover:text-yellow-400 transition-all 
        <%= currentRoute === '/profile/edit' ? 'underline' : '' %>">Profile</a>
        <a href="/bookmarks" class="text-gray-800 dark:text-white hover:underline hover:text-yellow-400 transition-all 
        <%= currentRoute === '/bookmarks' ? 'underline' : '' %>">Bookmarks</a>
        <% if (user.following.length === 0) { %>
            <a href="/feed" class="hidden hover:underline hover:text-yellow-400 transition-all">Feed</a>
        <% } else { %>
            <a href="/feed" class="text-white dark:text-gray-200 hover:underline hover:text-yellow-400 transition-all 
            <%= currentRoute === '/feed' ? 'underline' : '' %>">Feed</a>
        <% } %>
        <a href="/logout" class="text-white dark:text-gray-200 hover:text-red-400 hover:underline transition-all">Logout</a>
    <% } else { %>
        <a href="/login" class="text-white dark:text-gray-200 hover:underline hover:text-yellow-400 transition-all 
        <%= currentRoute === '/login' ? 'underline' : '' %>">Login</a>
        <a href="/register" class="text-white dark:text-gray-200 hover:underline hover:text-yellow-400 transition-all 
        <%= currentRoute === '/register' ? 'underline' : '' %>">Register</a>
    <% } %>
</nav>

</header>

<!-- Mobile Menu (only visible in small screens) -->
<div class="mobile-menu hidden lg:hidden bg-gradient-to-r from-blue-500 to-purple-600 p-6 rounded-lg shadow-lg backdrop-blur-lg">
    <ul class="space-y-4 text-lg font-medium text-white">
        <% if (user) { %>
            <li class="cursor-pointer hover:opacity-80 transition-all">
                <a href="/dashboard" aria-label="Go to Dashboard">Dashboard</a>
            </li>
            <li class="cursor-pointer hover:opacity-80 transition-all">
                <a href="/logout" aria-label="Logout">Logout</a>
            </li>
        <% } else { %>
            <li class="cursor-pointer hover:opacity-80 transition-all">
                <a href="/login" aria-label="Login to your account">Login</a>
            </li>
            <li class="cursor-pointer hover:opacity-80 transition-all">
                <a href="/register" aria-label="Create a new account">Register</a>
            </li>
        <% } %>
    </ul>
</div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).on('click', '.bookmark-button', function(e) {
    e.preventDefault();
    const postId = $(this).data('id');
    const $button = $(this);
    
    // Determine whether to bookmark or unbookmark
    const isBookmarking = $button.text().trim() === 'Bookmark';

    $.ajax({
        url: isBookmarking ? `/bookmark/${postId}` : `/bookmark/${postId}?_method=DELETE`,
        type: isBookmarking ? 'POST' : 'DELETE',
        success: function(response) {
            // Update the button text
            if (isBookmarking) {
                $button.text('Unbookmark').removeClass('bg-blue-500 hover:bg-blue-600').addClass('bg-red-500 hover:bg-red-600');
            } else {
                $button.text('Bookmark').removeClass('bg-red-500 hover:bg-red-600').addClass('bg-blue-500 hover:bg-blue-600');
            }
            // Optionally, show a success message
            // alert(response.message);
        },
        error: function(xhr) {
            // Handle errors and display messages
            alert(xhr.responseJSON ? xhr.responseJSON.message : 'An error occurred. Please try again.');
        }
    });
});
</script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Toggle mobile menu visibility
        const btn = document.querySelector('button.mobile-menu-button');
        const menu = document.querySelector('.mobile-menu');
        btn.addEventListener('click', () => {
            menu.classList.toggle('hidden');
        });
        
        // Theme toggle functionality
        const themeToggle = document.querySelector('.theme-toggle');
        const body = document.body;

        // Load saved theme from localStorage
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            body.classList.add('dark-theme');
            document.getElementById('sun').classList.remove('hidden');
            document.getElementById('moon').classList.add('hidden');
        }

        themeToggle.addEventListener('click', () => {
            body.classList.toggle('dark-theme');
            document.getElementById('sun').classList.toggle('hidden');
            document.getElementById('moon').classList.toggle('hidden');
            
            // Save theme to localStorage
            const currentTheme = body.classList.contains('dark-theme') ? 'dark' : 'light';
            localStorage.setItem('theme', currentTheme);
        });
    });

    // Notification count update
    function updateNotificationCount() {
        const notificationCountElement = document.querySelector('.notification-count');

        if (!notificationCountElement) return; // Ensure the element exists

        fetch('/notifications/count')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const count = Number(data);
                if (!isNaN(count) && count >= 0) {
                    if (count > 0) {
                        notificationCountElement.textContent = count;
                        notificationCountElement.classList.remove('hidden');
                        notificationCountElement.classList.add('flex');
                    } else {
                        notificationCountElement.textContent = '';
                        notificationCountElement.classList.add('hidden');
                        notificationCountElement.classList.remove('flex');
                    }
                } else {
                    console.error('Invalid notification count:', data);
                }
            })
            .catch(error => {
                console.error('Error fetching notification count:', error);
            });
    }

    document.addEventListener('DOMContentLoaded', updateNotificationCount);
    setInterval(updateNotificationCount, 5000);
</script>